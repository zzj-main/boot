接口特点
接口使用interface 进行修饰
    public interface 接口名{}
类实现接口用implement表示
    public class 类名 implement 接口名{}
接口不能直接实例化
    可以参照多态的方式，通过实现类对象实例化，称为接口多态
    多态形式
        具体类多态
        抽象类多态
        接口多态
     多态前提：有继承或者实现关系，有方法重写，有父类/接口 引用指向 子类/实现 类对象
接口实现类
    要么重写接口中所有的抽象方法
    要么是抽象类
接口成员特点
    成员变量只能是常量
    默认修饰符：public static final
    接口没有构造方法，因为接口主要对行为进行抽象，是没有具体存在一个类如果没有父类，默认继承Object类

成员方法
    只能是抽象方法
    默认修饰符：public abstract

类和接口的关系
    类和类的关系
        继承关系，只能单继承，但是可以多层继承
    类和接口的关系
        实现关系，可以单实现，也可以多实现，还可以在继承一个类的同时实现多个接口
    接口和接口的关系
        继承关系，可以单继承也可以多继承
抽象类和接口的区别
成员区别：
    抽象类 ：变量，常量，有构造方法也有非构造方法
    接口：常量，抽象方法
关系区别（语法）
    类与类 ：继承，单继承
    类与接口：实现，可以单实现，也可以多实现
    接口：继承，单继承，多继承
设计理念区别
    抽象类： 对类抽象，包括属性，行为
    接口：对行为抽象，主要是行为
抽象类对事物的抽象，接口是对行为的抽象





